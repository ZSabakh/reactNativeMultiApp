{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zurab\\\\Desktop\\\\React Native\\\\reactNativeTest\\\\src\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nfunction ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add \",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomizer()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    style: {},\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar randomizer = function randomizer() {\n  var red = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/zurab/Desktop/React Native/reactNativeTest/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","randomizer","item","height","width","backgroundColor","red","Math","floor","random","blue","green","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,SAASC,WAAT,GAAuB;AAAA,kBACOD,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,MACdE,MADc;AAAA,MACNC,SADM;;AAGrB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,UAAU,EAAvB,GAAT;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAV;AAAA,KAFhB;AAGE,IAAA,IAAI,EAAEH,MAHR;AAIE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXG,IAAW,QAAXA,IAAW;AACxB,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,GADH;AAELC,UAAAA,KAAK,EAAE,GAFF;AAGLC,UAAAA,eAAe,EAAEH;AAHZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AA2BD;;AAED,IAAMD,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,MAAME,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AAEA,kBAAcH,GAAd,UAAsBK,KAAtB,UAAgCD,IAAhC;AACD,CAND;;AAQA,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAehB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Button, FlatList } from \"react-native\";\r\n\r\nfunction ColorScreen() {\r\n  const [colors, setColors] = useState([]);\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Add \"\r\n        onPress={() => {\r\n          setColors([...colors, randomizer()]);\r\n        }}\r\n      />\r\n\r\n      <FlatList\r\n        style={{}}\r\n        keyExtractor={(item) => item}\r\n        data={colors}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View\r\n              style={{\r\n                height: 100,\r\n                width: 100,\r\n                backgroundColor: item,\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst randomizer = () => {\r\n  const red = Math.floor(Math.random() * 256);\r\n  const blue = Math.floor(Math.random() * 256);\r\n  const green = Math.floor(Math.random() * 256);\r\n\r\n  return `rgb(${red}, ${green}, ${blue})`;\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ColorScreen;\r\n"]},"metadata":{},"sourceType":"module"}